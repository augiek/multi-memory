[{"/Users/augustus/Desktop/code/individual_project/frontend/src/reportWebVitals.js":"1","/Users/augustus/Desktop/code/individual_project/frontend/src/App.js":"2","/Users/augustus/Desktop/code/individual_project/frontend/src/pages/SignupPage.js":"3","/Users/augustus/Desktop/code/individual_project/frontend/src/pages/HomePage.js":"4","/Users/augustus/Desktop/code/individual_project/frontend/src/api/UserAPI.js":"5","/Users/augustus/Desktop/code/individual_project/frontend/src/pages/LoginPage.js":"6","/Users/augustus/Desktop/code/individual_project/frontend/src/components/AppNav/AppNav.js":"7","/Users/augustus/Desktop/code/individual_project/frontend/src/index.js":"8","/Users/augustus/Desktop/code/individual_project/frontend/src/pages/ArchivePage.js":"9","/Users/augustus/Desktop/code/individual_project/frontend/src/pages/AccountPage.js":"10","/Users/augustus/Desktop/code/individual_project/frontend/src/pages/NewEntryPage.js":"11","/Users/augustus/Desktop/code/individual_project/frontend/src/api/EntryAPI.js":"12","/Users/augustus/Desktop/code/individual_project/frontend/src/pages/EntryDetailPage.js":"13"},{"size":362,"mtime":1607983005434,"results":"14","hashOfConfig":"15"},{"size":2413,"mtime":1608263657037,"results":"16","hashOfConfig":"15"},{"size":1022,"mtime":1608063034855,"results":"17","hashOfConfig":"15"},{"size":153,"mtime":1608058941296,"results":"18","hashOfConfig":"15"},{"size":844,"mtime":1608065103938,"results":"19","hashOfConfig":"15"},{"size":811,"mtime":1608062138488,"results":"20","hashOfConfig":"15"},{"size":3046,"mtime":1608065956256,"results":"21","hashOfConfig":"15"},{"size":548,"mtime":1608054235144,"results":"22","hashOfConfig":"15"},{"size":587,"mtime":1608264208200,"results":"23","hashOfConfig":"15"},{"size":167,"mtime":1608059021328,"results":"24","hashOfConfig":"15"},{"size":5486,"mtime":1608254137955,"results":"25","hashOfConfig":"15"},{"size":975,"mtime":1608262675901,"results":"26","hashOfConfig":"15"},{"size":920,"mtime":1608266049175,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"5dfed0",{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"41","messages":"42","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"38"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"47"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"50"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"60","messages":"61","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/augustus/Desktop/code/individual_project/frontend/src/reportWebVitals.js",[],["62","63"],"/Users/augustus/Desktop/code/individual_project/frontend/src/App.js",[],"/Users/augustus/Desktop/code/individual_project/frontend/src/pages/SignupPage.js",[],["64","65"],"/Users/augustus/Desktop/code/individual_project/frontend/src/pages/HomePage.js",[],["66","67"],"/Users/augustus/Desktop/code/individual_project/frontend/src/api/UserAPI.js",["68"],"/Users/augustus/Desktop/code/individual_project/frontend/src/pages/LoginPage.js",["69"],"import React from 'react'\nimport {Link, Redirect} from 'react-router-dom'\n\n\nconst LoginPage = (props) => {\n  console.log(props)\n\n  if (props.isLoggedIn) {\n    return (\n      <div>\n        <button onClick={props.handleLogout}>Logout</button>\n        {/* <Redirect to='/'></Redirect> */}\n      </div>\n    )\n  }\n\n  return (\n    <div>\n      <h1> Login Page </h1>\n      <form onSubmit={props.handleLogin}>\n        <label>Username:</label>\n        <input type='text' placeholder='Username' name='username' />\n        <label>Password:</label>\n        <input type='password' name='password' />\n        <button type='submit'>Login</button>\n      </form>\n      <div>\n        <Link to='/'>Home</Link>\n      </div>\n      <div>\n        <Link to='/signup'>Signup</Link>\n      </div>\n    </div>\n  )\n}\n\nexport default LoginPage","/Users/augustus/Desktop/code/individual_project/frontend/src/components/AppNav/AppNav.js",["70","71","72","73","74"],"import React, { useState } from 'react';\nimport {\n  Button,\n  Collapse,\n  Navbar,\n  NavbarToggler,\n  NavbarBrand,\n  Nav,\n  NavItem,\n  NavLink,\n  UncontrolledDropdown,\n  DropdownToggle,\n  DropdownMenu,\n  DropdownItem,\n  NavbarText\n} from 'reactstrap';\n\nconst AppNav = (props) => {\n  const [isOpen, setIsOpen] = useState(false);\n\n  const toggle = () => setIsOpen(!isOpen);\n\n  return (\n    <div>\n      <Navbar color=\"info\" light expand=\"sm\">\n        <NavbarBrand href=\"/\">multiMemories</NavbarBrand>\n        <NavbarToggler onClick={toggle} />\n        <Collapse isOpen={isOpen} navbar>\n          <Nav className=\"mr-auto\" navbar>\n            <NavItem>\n              <NavLink href=\"/\">Home</NavLink>\n            </NavItem>\n            <NavItem>\n              <NavLink href=\"new/\">New Entry</NavLink>\n            </NavItem>\n            <NavItem>\n              <NavLink href=\"archive/\">Archive</NavLink>\n            </NavItem>\n            {/* <UncontrolledDropdown nav inNavbar>\n              <DropdownToggle nav caret>\n                Options\n              </DropdownToggle>\n              <DropdownMenu right>\n                <DropdownItem>\n                  Option 1\n                </DropdownItem>\n                <DropdownItem>\n                  Option 2\n                </DropdownItem>\n                <DropdownItem divider />\n                <DropdownItem>\n                  Reset\n                </DropdownItem>\n              </DropdownMenu>\n            </UncontrolledDropdown> */}\n          </Nav>\n          <div>\n            {props.isLoggedIn\n              ? <Button onClick={props.handleLogout}>Log out</Button>\n              : <Button href='/login'>Log in</Button>\n            }\n            {props.isLoggedIn\n              ? <Button href=\"/account\">Account</Button>\n              : <Button href=\"/signup\">Sign up</Button>\n            }\n          </div> \n              {/* <Button size=\"sm\" color=\"dark\" href=\"/account\">Login/Logout</Button>\n              <Button size=\"sm\" color=\"light\" href=\"/account\">Signup/Account</Button> */}\n        </Collapse>\n      </Navbar>\n    </div>\n  );\n}\n\n// if (props.isLoggedIn) {\n//   return (\n//     <div>\n//       <button onClick={props.handleLogout}>Logout</button>\n//       <Redirect to='/'></Redirect>\n//     </div>\n//   )\n// }\n\n// import React, { Component } from 'react';\n// // import { Link } from 'react-router-dom';\n// import { Navbar, NavItem, NavLink } from 'reactstrap';\n// // import navItems from '../../config/Sections.json';\n\n// class AppNav extends Component {\n//   render() {\n//     return (\n//       <Navbar color=\"light\">\n//         {/* {navItems.map((navItem) =>\n//           <NavItem>\n//             <NavLink to={`/archive/${navItem.value}`} >\n//               { navItem.label }\n//             </Link>\n//           </NavItem>\n//         )} */}\n//         <NavItem>\n//           <NavLink href=\"/\">Home</NavLink>\n//         </NavItem>\n//         <NavItem>\n//           <NavLink href=\"/\">Archive</NavLink>\n//         </NavItem>\n//       </Navbar>\n//     )\n//   }\n// }\n\nexport default AppNav;",["75","76"],"/Users/augustus/Desktop/code/individual_project/frontend/src/index.js",[],["77","78"],"/Users/augustus/Desktop/code/individual_project/frontend/src/pages/ArchivePage.js",[],"/Users/augustus/Desktop/code/individual_project/frontend/src/pages/AccountPage.js",[],"/Users/augustus/Desktop/code/individual_project/frontend/src/pages/NewEntryPage.js",["79","80","81","82","83","84","85"],"import React, { Component, useState } from 'react';\nimport { addEntry } from '../api/EntryAPI';\nimport { Redirect } from 'react-router-dom';\nimport { Button, Form, FormGroup, Input, Label, Dropdown, DropdownToggle, DropdownMenu, DropdownItem } from 'reactstrap'\n// import { ReactMic } from 'react-mic';\nimport MicRecorder from 'mic-recorder-to-mp3'\n\nfunction NewEntryPage() {\n  const [ redirect, setRedirect ] = React.useState(false);\n  const [voiceBody, setVoiceBody] = useState(null);\n  const [writtenBody, setWrittenBody] = useState(null);\n  const [locationTags, setLocationTags] = useState(null);\n  const [textTags, setTextTags] = useState(null);\n  // const [fileUpload, setFileUpload] = useState(null);\n  const [privacy, setPrivacy] = useState(null);\n  const [entryTitle, setEntryTitle] = useState(\"\");\n\n\n  const recorder = new MicRecorder ({\n    bitRate: 128\n  });\n\n  const startRecord = async (event) => {\n    event.preventDefault();\n    recorder.start().then(() => {\n      // something else\n    }).catch((e) => {\n      console.error(e);\n    });\n  }\n\n  const stopRecord = async (event) => {\n    event.preventDefault();\n    recorder.stop()\n    .getMp3().then(([buffer, blob]) => {\n      // do what ever you want with buffer and blob\n      // Example: Create a mp3 file and play\n      // console.log(buffer)\n      // console.log(blob)\n      blob.arrayBuffer().then(buffer => {\n        let base64String = btoa(String.fromCharCode(...new Uint8Array(buffer)));\n        setVoiceBody(base64String)\n      });\n\n      let base64String = btoa(String.fromCharCode(...new Uint8Array(buffer)));\n\n\n      \n    }).catch((e) => {\n      alert('We could not retrieve your message');\n      console.log(e);\n    });\n  }\n  \n  const playRecord = async (event) => {\n    event.preventDefault();\n\n      const player = new Audio(URL.createObjectURL(stopRecord.audio_file));\n        player.play();\n  }\n\n  const handleFormSubmit = async (event) => {\n    event.preventDefault();\n\n    const entryObject = {\n      voice_body: voiceBody,\n      written_body: writtenBody,\n      location_tags: locationTags,\n      text_tags: textTags,\n      // file_upload: btoa(fileUpload),\n      privacy: privacy,\n      entry_title: entryTitle \n    }\n    console.log(entryObject)\n    try {\n      const response = await addEntry(entryObject);\n      if (response.status === 200) {\n        // redirect the user back to Home Page upon successful POST\n        setRedirect(true);\n      } else {\n        // const jsonData = await response.json();\n        // alert(jsonData.error.message);\n        console.log(\"else statement triggered, line 77\")\n      }\n    } catch (err) {\n      console.error('error occurred while adding entry (consoled on NewEntryPage1):', err);\n    }\n  };\n\n  return redirect ? <Redirect to='/' /> : (\n    <div style={{ padding: '20px' }}>\n      <h3> Add an Entry </h3>\n        <Label for=\"record_start\"> Start recording</Label>\n        <Button size=\"sm\" color=\"success\" type=\"button\" name=\"record_start\" id=\"record_start\" onClick={startRecord}>RECORD</Button>\n        <br/>\n        <Label for=\"record_stop\"> Stop recording </Label>\n        <Button size=\"sm\" color=\"danger\" type=\"button\" name=\"record_stop\" id=\"record_stop\" onClick={stopRecord}>STOP</Button>\n        <br/>\n        {/* <Label for=\"record_stop\"> Play recording </Label>\n        <Button size=\"sm\" color=\"primary\" type=\"button\" name=\"record_play\" id=\"record_play\" onClick={playRecord}>PLAY</Button> */}\n      <Form onSubmit={handleFormSubmit}>\n        {/* <FormGroup>\n          <Label for=\"audio_file\">Audio File (to be hidden?)</Label>\n          <Input type=\"file\" name=\"voice_body\" id=\"audio_file\" />\n        </FormGroup> */}\n        <FormGroup>\n          <Label for=\"writtenBody\">Write your entry</Label>\n          <Input value={writtenBody} type=\"textarea\" name=\"writtenBody\" id=\"writtenBody\" onChange={e => setWrittenBody(e.target.value)}/>\n        </FormGroup>\n        <FormGroup>\n          <Label for=\"locationTags\">Relevant Locations</Label>\n          <Input type=\"textarea\" name=\"locationTags\" id=\"locationTags\" onChange={e => setLocationTags(e.target.value)} />\n        </FormGroup>\n        <FormGroup>\n          <Label for=\"textTags\">Relevant Tags</Label>\n          <Input type=\"text\" name=\"textTags\" id=\"textTags\" onChange={e => setTextTags(e.target.value)}/>\n        </FormGroup>\n        {/* <FormGroup>\n          <Label for=\"fileUpload\">Relevant Files</Label>\n          <Input type=\"file\" name=\"fileUpload\" id=\"fileUpload\" onChange={e => setFileUpload(e.target.value)}/>\n        </FormGroup> */}\n        <FormGroup>\n          <Label for=\"privacy\">Privacy</Label>\n          <Input type=\"select\" name=\"privacy\" id=\"privacy\" multiple onChange={e => setPrivacy(e.target.value)}>\n            <option>Only me</option>\n            <option>Kids only</option>\n            <option>Kids' branches</option>\n            <option>Spouse only</option>\n            <option>Suzanne's branch</option> */}\n            {/* maybe there's a better way to do this? need to have a family tree page somewhere else where they can add people and make branches/groups. customized privacy is a lower priority in the grand scheme */}\n          </Input>\n        </FormGroup>\n        <FormGroup>\n          <Label for=\"entryTitle\" >Entry Title</Label>\n          <Input type=\"text\" name=\"entryTitle\" id=\"entryTitle\" onChange={e => setEntryTitle(e.target.value)}/>\n        </FormGroup>\n        <Button>Submit</Button>\n      </Form>\n    </div>\n  )};\n\nexport default NewEntryPage","/Users/augustus/Desktop/code/individual_project/frontend/src/api/EntryAPI.js",[],"/Users/augustus/Desktop/code/individual_project/frontend/src/pages/EntryDetailPage.js",["86"],{"ruleId":"87","replacedBy":"88"},{"ruleId":"89","replacedBy":"90"},{"ruleId":"87","replacedBy":"91"},{"ruleId":"89","replacedBy":"92"},{"ruleId":"87","replacedBy":"93"},{"ruleId":"89","replacedBy":"94"},{"ruleId":"95","severity":1,"message":"96","line":35,"column":1,"nodeType":"97","endLine":35,"endColumn":52},{"ruleId":"98","severity":1,"message":"99","line":2,"column":15,"nodeType":"100","messageId":"101","endLine":2,"endColumn":23},{"ruleId":"98","severity":1,"message":"102","line":11,"column":3,"nodeType":"100","messageId":"101","endLine":11,"endColumn":23},{"ruleId":"98","severity":1,"message":"103","line":12,"column":3,"nodeType":"100","messageId":"101","endLine":12,"endColumn":17},{"ruleId":"98","severity":1,"message":"104","line":13,"column":3,"nodeType":"100","messageId":"101","endLine":13,"endColumn":15},{"ruleId":"98","severity":1,"message":"105","line":14,"column":3,"nodeType":"100","messageId":"101","endLine":14,"endColumn":15},{"ruleId":"98","severity":1,"message":"106","line":15,"column":3,"nodeType":"100","messageId":"101","endLine":15,"endColumn":13},{"ruleId":"87","replacedBy":"107"},{"ruleId":"89","replacedBy":"108"},{"ruleId":"87","replacedBy":"109"},{"ruleId":"89","replacedBy":"110"},{"ruleId":"98","severity":1,"message":"111","line":1,"column":17,"nodeType":"100","messageId":"101","endLine":1,"endColumn":26},{"ruleId":"98","severity":1,"message":"112","line":4,"column":49,"nodeType":"100","messageId":"101","endLine":4,"endColumn":57},{"ruleId":"98","severity":1,"message":"103","line":4,"column":59,"nodeType":"100","messageId":"101","endLine":4,"endColumn":73},{"ruleId":"98","severity":1,"message":"104","line":4,"column":75,"nodeType":"100","messageId":"101","endLine":4,"endColumn":87},{"ruleId":"98","severity":1,"message":"105","line":4,"column":89,"nodeType":"100","messageId":"101","endLine":4,"endColumn":101},{"ruleId":"98","severity":1,"message":"113","line":45,"column":11,"nodeType":"100","messageId":"101","endLine":45,"endColumn":23},{"ruleId":"98","severity":1,"message":"114","line":55,"column":9,"nodeType":"100","messageId":"101","endLine":55,"endColumn":19},{"ruleId":"115","severity":1,"message":"116","line":15,"column":6,"nodeType":"117","endLine":15,"endColumn":8,"suggestions":"118"},"no-native-reassign",["119"],"no-negated-in-lhs",["120"],["119"],["120"],["119"],["120"],"import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","no-unused-vars","'Redirect' is defined but never used.","Identifier","unusedVar","'UncontrolledDropdown' is defined but never used.","'DropdownToggle' is defined but never used.","'DropdownMenu' is defined but never used.","'DropdownItem' is defined but never used.","'NavbarText' is defined but never used.",["119"],["120"],["119"],["120"],"'Component' is defined but never used.","'Dropdown' is defined but never used.","'base64String' is assigned a value but never used.","'playRecord' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array.","ArrayExpression",["121"],"no-global-assign","no-unsafe-negation",{"desc":"122","fix":"123"},"Update the dependencies array to be: [props]",{"range":"124","text":"125"},[442,444],"[props]"]