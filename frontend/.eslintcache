[{"/Users/augustus/Desktop/code/individual_project/frontend/src/reportWebVitals.js":"1","/Users/augustus/Desktop/code/individual_project/frontend/src/App.js":"2","/Users/augustus/Desktop/code/individual_project/frontend/src/pages/SignupPage.js":"3","/Users/augustus/Desktop/code/individual_project/frontend/src/pages/HomePage.js":"4","/Users/augustus/Desktop/code/individual_project/frontend/src/api/UserAPI.js":"5","/Users/augustus/Desktop/code/individual_project/frontend/src/pages/LoginPage.js":"6","/Users/augustus/Desktop/code/individual_project/frontend/src/index.js":"7","/Users/augustus/Desktop/code/individual_project/frontend/src/pages/ArchivePage.js":"8","/Users/augustus/Desktop/code/individual_project/frontend/src/pages/NewEntryPage.js":"9","/Users/augustus/Desktop/code/individual_project/frontend/src/api/EntryAPI.js":"10","/Users/augustus/Desktop/code/individual_project/frontend/src/pages/EntryDetailPage.js":"11","/Users/augustus/Desktop/code/individual_project/frontend/src/pages/FamilyTreePage.js":"12","/Users/augustus/Desktop/code/individual_project/frontend/src/pages/EditEntryPage.js":"13","/Users/augustus/Desktop/code/individual_project/frontend/src/components/AppNav/AppNav.js":"14","/Users/augustus/Desktop/code/individual_project/frontend/src/pages/EditGroupPage.js":"15","/Users/augustus/Desktop/code/individual_project/frontend/src/pages/EditMemberPage.js":"16","/Users/augustus/Desktop/code/individual_project/frontend/src/pages/GroupDetailPage.js":"17","/Users/augustus/Desktop/code/individual_project/frontend/src/api/GroupAPI.js":"18","/Users/augustus/Desktop/code/individual_project/frontend/src/pages/NewMemberPage.js":"19","/Users/augustus/Desktop/code/individual_project/frontend/src/pages/NewGroupPage.js":"20","/Users/augustus/Desktop/code/individual_project/frontend/src/api/PromptAPI.js":"21"},{"size":362,"mtime":1607983005434,"results":"22","hashOfConfig":"23"},{"size":3757,"mtime":1608605604975,"results":"24","hashOfConfig":"23"},{"size":1254,"mtime":1608648681635,"results":"25","hashOfConfig":"23"},{"size":1548,"mtime":1608641723490,"results":"26","hashOfConfig":"23"},{"size":1019,"mtime":1608595648358,"results":"27","hashOfConfig":"23"},{"size":1138,"mtime":1608648674816,"results":"28","hashOfConfig":"23"},{"size":574,"mtime":1608569773667,"results":"29","hashOfConfig":"23"},{"size":2367,"mtime":1608646546956,"results":"30","hashOfConfig":"23"},{"size":6892,"mtime":1608643703344,"results":"31","hashOfConfig":"23"},{"size":1891,"mtime":1608607658729,"results":"32","hashOfConfig":"23"},{"size":2675,"mtime":1608610125642,"results":"33","hashOfConfig":"23"},{"size":1089,"mtime":1608649133900,"results":"34","hashOfConfig":"23"},{"size":5242,"mtime":1608604301382,"results":"35","hashOfConfig":"23"},{"size":2911,"mtime":1608647061576,"results":"36","hashOfConfig":"23"},{"size":0,"mtime":1608563374118,"results":"37","hashOfConfig":"23"},{"size":0,"mtime":1608563390438,"results":"38","hashOfConfig":"23"},{"size":0,"mtime":1608563407502,"results":"39","hashOfConfig":"23"},{"size":2843,"mtime":1608565949811,"results":"40","hashOfConfig":"23"},{"size":2596,"mtime":1608567184369,"results":"41","hashOfConfig":"23"},{"size":1684,"mtime":1608566586909,"results":"42","hashOfConfig":"23"},{"size":4305,"mtime":1608608789362,"results":"43","hashOfConfig":"23"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},"5dfed0",{"filePath":"47","messages":"48","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"50"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"53","messages":"54","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"55","messages":"56","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"46"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"62","messages":"63","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"64","messages":"65","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"68","messages":"69","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"72","messages":"73","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"46"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"79"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"79"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"79"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/augustus/Desktop/code/individual_project/frontend/src/reportWebVitals.js",[],["94","95"],"/Users/augustus/Desktop/code/individual_project/frontend/src/App.js",["96","97","98","99","100","101","102","103"],"import './App.css';\nimport React, { useState, useEffect } from 'react';\nimport { BrowserRouter, Route, Redirect } from 'react-router-dom';\nimport AppNav from './components/AppNav/AppNav.js';\nimport HomePage from './pages/HomePage.js';\nimport LoginPage from './pages/LoginPage.js';\nimport SignupPage from './pages/SignupPage.js';\nimport NewEntryPage from './pages/NewEntryPage.js';\nimport FamilyTreePage from './pages/FamilyTreePage.js';\nimport ArchivePage from './pages/ArchivePage.js';\nimport EntryDetailPage from './pages/EntryDetailPage.js'\nimport EditEntryPage from './pages/EditEntryPage.js'\nimport MemberDetailPage from './pages/FamilyTreePage.js';\nimport NewGroupPage from './pages/NewGroupPage.js';\nimport GroupDetailPage from './pages/GroupDetailPage.js'\nimport EditGroupPage from './pages/EditGroupPage.js'\nimport EditMemberPage from './pages/EditMemberPage.js'\nimport NewMemberPage from './pages/NewMemberPage.js'\nimport UserAPI from './api/UserAPI';\n\n{/* <script src=\"https://unpkg.com/leaflet@1.7.1/dist/leaflet.js\"\n  integrity=\"sha512-XQoYMqMTK8LvdxXYG3nZ448hOEQiglfqkJs1NOQV44cWnUrBc8PkAOcXy20w0vlaXaVUearIOBhiXZ5V3ynxwA==\"\n  crossorigin=\"\">\n</script> */}\n\nfunction App() {\n  const [user, setUser] = useState(null)\n  const [isLoggedIn, setIsLoggedIn] = useState(false)\n\n  useEffect(() => {\n    getUser()\n  }, [])\n\n  const getUser = async () => {\n    if (localStorage.getItem('auth-user') !== null) {\n      let response = await UserAPI.getLoggedInUser(localStorage.getItem('auth-user'))\n      let data = await response.json()\n      if (data.username) {\n        setIsLoggedIn(true)\n        setUser(data)\n      }\n    }\n  }\n\n  const handleLogin = async (event) => {\n    event.preventDefault()\n    let userCredentials = {\n      username: event.target.username.value,\n      password: event.target.password.value\n    }\n    let username = event.target.username.value;\n    let response = await UserAPI.login(userCredentials)\n    let data = await response.json()\n    if (data.token) {\n      localStorage.setItem('auth-user', data.token)\n      localStorage.setItem('username', username)\n      console.log(data)\n      setIsLoggedIn(true)\n      setUser(data.user)\n    }\n  }\n\n  const handleLogout = () => {\n    localStorage.setItem('auth-user', null)\n    setIsLoggedIn(false)\n    setUser(null)\n  }\n\n  const renderLogInPage = () => {\n    return (\n      <LoginPage\n        isLoggedIn={isLoggedIn}\n        user={user}\n        handleLogin={handleLogin}\n        handleLogout={handleLogout}\n      />\n    )\n  }\n\n  return (\n    <div className=\"App\">\n        <BrowserRouter>\n      <AppNav handleLogout={handleLogout}/>\n            <Route exact path=\"/\" component={HomePage} />\n            <Route exact path=\"/login\" render={renderLogInPage} />\n            <Route exact path=\"/signup\" component={SignupPage} />\n            <Route exact path=\"/new\" component={NewEntryPage} />\n            <Route exact path=\"/groups\" component={FamilyTreePage} />\n            <Route exact path=\"/archive\" component={ArchivePage} />\n            <Route exact path=\"/archive/entry/:id(\\d+)\" component={EntryDetailPage} />\n            <Route exact path=\"/archive/entry/:id(\\d+)/edit\" component={EditEntryPage} />\n\n            {/* <Route exact path=\"/groups/new\" component={NewGroupPage} />\n            <Route exact path=\"/groups/:id(\\d+)/edit\" component={EditGroupPage} />\n            <Route exact path=\"/groups/:id(\\d+)\" component={GroupDetailPage} />\n            <Route exact path=\"/groups/:id(\\d+)/:id(\\d+)\" component={MemberDetailPage} />\n            <Route exact path=\"/groups/:id(\\d+)/:id(\\d+)/edit\" component={EditMemberPage} />\n            <Route exact path=\"/groups/:id(\\d+)/new\" component={NewMemberPage} /> */}\n        </BrowserRouter>\n      </div>\n  );\n}\n\nexport default App;\n",["104","105"],"/Users/augustus/Desktop/code/individual_project/frontend/src/pages/SignupPage.js",["106"],"/Users/augustus/Desktop/code/individual_project/frontend/src/pages/HomePage.js",["107","108","109"],"/Users/augustus/Desktop/code/individual_project/frontend/src/api/UserAPI.js",["110"],"const BASE_URL = 'http://localhost:8000/';\n\nconst login = async (userCredentials) => {\n  let response = await fetch(`${BASE_URL}token-auth/`, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(userCredentials)\n  })\n  return response\n}\n\nconst getLoggedInUser = async (token) => {\n  let response = await fetch(`${BASE_URL}journal/current_user`, {\n    headers: {\n      'Content-Type': 'application/json',\n      'Authorization': `JWT ${token}` \n    },\n  })\n  return response \n}\n\nconst signupUser = async (userCredentials) => {\n  let response = await fetch(`${BASE_URL}journal/users/`, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(userCredentials)\n  })\n  return response\n}\n\nexport default {login, getLoggedInUser, signupUser}\n\n\n\n// TOKEN: eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ1c2VyX2lkIjoxLCJ1c2VybmFtZSI6Im1pa2VzIiwiZXhwIjoxNjA4NTk3ODkyLCJlbWFpbCI6IiJ9.dGcxHu1WHLZPT1aTTR2Jo3Y2AxI3CvCsGU2OJCJDa9E","/Users/augustus/Desktop/code/individual_project/frontend/src/pages/LoginPage.js",["111","112"],"/Users/augustus/Desktop/code/individual_project/frontend/src/index.js",[],"/Users/augustus/Desktop/code/individual_project/frontend/src/pages/ArchivePage.js",["113","114","115","116","117"],"/Users/augustus/Desktop/code/individual_project/frontend/src/pages/NewEntryPage.js",["118","119","120","121","122","123","124","125"],"/Users/augustus/Desktop/code/individual_project/frontend/src/api/EntryAPI.js",[],"/Users/augustus/Desktop/code/individual_project/frontend/src/pages/EntryDetailPage.js",["126","127"],"/Users/augustus/Desktop/code/individual_project/frontend/src/pages/FamilyTreePage.js",[],"/Users/augustus/Desktop/code/individual_project/frontend/src/pages/EditEntryPage.js",["128","129","130","131","132","133","134"],"import React, { Component, useState, useEffect } from 'react';\nimport { editEntry, fetchEntryByID } from '../api/EntryAPI';\nimport { Redirect } from 'react-router-dom';\nimport { Button, Form, FormGroup, Input, Label, Dropdown, DropdownToggle, DropdownMenu, DropdownItem } from 'reactstrap'\n// import { ReactMic } from 'react-mic';\nimport MicRecorder from 'mic-recorder-to-mp3'\n\nconst EditEntryPage = (props) => {\n  const [ redirect, setRedirect ] = React.useState(false);\n  // const [voiceBody, setVoiceBody] = useState(null);\n  const [entry, setEntry] = useState({});\n\n  const recorder = new MicRecorder ({\n    bitRate: 128\n  });\n\n  // state starts as null, and then you go get whatever exists in that page (useEffect?)\n  // option to replace recording?\n  // option to listen to existing recording?\n\n  useEffect(() => {\n    // This useEffect using [] will only run 1 time after initial render/return\n    const response = fetchEntryByID(props.match.params.id)\n    response.then(data => {\n      console.log('data1', data)\n      setEntry(data)})\n  }, [])\n\n  // const startRecord = async (event) => {\n  //   event.preventDefault();\n  //   recorder.start().then(() => {\n  //   }).catch((e) => {\n  //     console.error(e);\n  //   });\n  // }\n\n  // const stopRecord = async (event) => {\n  //   event.preventDefault();\n  //   recorder.stop()\n  //   .getMp3().then(([buffer, blob]) => {\n  //     blob.arrayBuffer().then(buffer => {\n  //       let base64String = btoa(String.fromCharCode(...new Uint8Array(buffer)));\n  //       setVoiceBody(base64String)\n  //     });\n\n  //     let base64String = btoa(String.fromCharCode(...new Uint8Array(buffer)));\n\n  //   }).catch((e) => {\n  //     alert('We could not retrieve your message');\n  //     console.log(e);\n  //   });\n  // }\n\n  const handleFormSubmit = async (event) => {\n    event.preventDefault();\n\n    const entryObject = {\n      id: entry.id,\n      // voice_body: entry.voice_body,\n      written_body: entry.written_body,\n      location_tags: entry.location_tags,\n      text_tags: entry.text_tags,\n      // file_upload: btoa(fileUpload),\n      privacy: entry.privacy,\n      entry_title: entry.entry_title \n    }\n    try {\n      const response = await editEntry(entryObject);\n      if (response.status === 200) {\n        setRedirect(true);\n      } else {\n        // const jsonData = await response.json();\n        // alert(jsonData.error.message);\n        console.log(\"else statement triggered, line 77\")\n      }\n    } catch (err) {\n      console.error('error occurred while adding entry (consoled on NewEntryPage1):', err);\n    }\n  };\n\n  return redirect ? <Redirect to={`/archive/entry/${entry.id}`} /> : (\n  // return redirect ? <Redirect to={`/`} /> : (\n    <div style={{ padding: '20px' }}>\n      <h3> Edit Your Entry </h3>\n        {/* <Label for=\"record_start\"> Start recording</Label>\n        <Button size=\"sm\" color=\"success\" type=\"button\" name=\"record_start\" id=\"record_start\" onClick={startRecord}>RECORD</Button>\n        <br/>\n        <Label for=\"record_stop\"> Stop recording </Label>\n        <Button size=\"sm\" color=\"danger\" type=\"button\" name=\"record_stop\" id=\"record_stop\" onClick={stopRecord}>STOP</Button>\n        <br/> */}\n      <Form onSubmit={handleFormSubmit}>\n        <FormGroup>\n          <Label for=\"entryTitle\" >Title</Label>\n          <Input value={entry.entry_title} type=\"text\" name=\"entryTitle\" id=\"entryTitle\" onChange={e => setEntry({...entry, entry_title: e.target.value})}/>\n        </FormGroup>\n        <FormGroup>\n          <Label for=\"writtenBody\">Add some details</Label>\n          <Input value={entry.written_body} type=\"textarea\" name=\"writtenBody\" id=\"writtenBody\" onChange={e => setEntry({...entry, written_body: e.target.value})}/>\n        </FormGroup>\n        <FormGroup>\n          <Label for=\"locationTags\">Add a location</Label>\n          <Input value={entry.location_tags} type=\"textarea\" name=\"locationTags\" id=\"locationTags\" onChange={e => setEntry({...entry, location_tags: e.target.value})} />\n        </FormGroup>\n        <FormGroup>\n          <Label for=\"textTags\">Add some tags</Label>\n          <Input value={entry.text_tags} type=\"text\" name=\"textTags\" id=\"textTags\" onChange={e => setEntry({...entry, text_tags: e.target.value})}/>\n        </FormGroup>\n        {/* <FormGroup>\n          <Label for=\"fileUpload\">Relevant Files</Label>\n          <Input type=\"file\" name=\"fileUpload\" id=\"fileUpload\" onChange={e => setFileUpload(e.target.value)}/>\n        </FormGroup> */}\n        <FormGroup>\n          <Label for=\"privacy\">Update your share setting</Label>\n          <Input type=\"select\" name=\"privacy\" id=\"privacy\" onChange={e => setEntry({...entry, privacy: e.target.value})} multiple>\n            <option>Only me</option>\n            <option>Kids only</option>\n            <option>Kids' branches</option>\n            <option>Spouse only</option>\n            <option>Suzanne's branch</option>\n            {/* maybe there's a better way to do this? need to have a family tree page somewhere else where they can add people and make branches/groups. customized privacy is a lower priority in the grand scheme */}\n          </Input>\n        </FormGroup>\n        <Button>Save Edits</Button>\n      </Form>\n    </div>\n  )};\n\nexport default EditEntryPage","/Users/augustus/Desktop/code/individual_project/frontend/src/components/AppNav/AppNav.js",["135","136","137","138","139","140","141","142","143","144","145","146"],"/Users/augustus/Desktop/code/individual_project/frontend/src/pages/EditGroupPage.js",[],["147","148"],"/Users/augustus/Desktop/code/individual_project/frontend/src/pages/EditMemberPage.js",[],"/Users/augustus/Desktop/code/individual_project/frontend/src/pages/GroupDetailPage.js",[],"/Users/augustus/Desktop/code/individual_project/frontend/src/api/GroupAPI.js",["149"],"const BASE_URL = 'http://localhost:8000/';\n\nconst fetchGroupByID = async (groupID) => {\n  const response = await fetch(`${BASE_URL}journal/groups/${groupID}/`);\n  const data = await response.json();\n  return data;\n};\n\nconst fetchGroups = async () => {\n  const url = `${BASE_URL}journal/groups/`;\n  const response = await fetch(url);\n  const data = await response.json();\n  return data;\n};\n\nconst searchGroups = async (textToSearchFor) => {\n  const response = await fetch(`${BASE_URL}?filter={\"where\":{\"entry_title\" OR 'written_body\" OR 'location_tags' OR 'text_tags':{\"ilike\":\"${textToSearchFor}\"}}}`)\n  const data = await response.json();\n  return data;\n};\n\nconst addGroup = (groupObject) => {\n  console.log(groupObject)\n  return fetch(`${BASE_URL}journal/groups/new/`, {\n    headers: {\n      'Content-Type': 'application/json',\n    },\n    method: \"POST\",\n    body: JSON.stringify(groupObject)\n  });\n};\n\nconst editGroup = (groupObject) => {\n  console.log(groupObject)\n  return fetch(`${BASE_URL}journal/${groupObject.id}/edit/`, {\n    headers: {\n      'Content-Type': 'application/json',\n    },\n    method: \"PUT\",\n    body: JSON.stringify(groupObject)\n  });\n};\n\nconst deleteGroup = (groupObject) => {\n  return fetch(`${BASE_URL}journal/${groupObject.id}/delete/`, {\n    headers: {\n      'Content-Type': 'application/json',\n    },\n    method: \"POST\",\n    body: JSON.stringify(groupObject)\n  });\n};\n\n// group members:\nconst fetchGroupMemberByID = async (groupID, memberID) => {\n  const response = await fetch(`${BASE_URL}journal/groups/${groupID}/${memberID}/`);\n  const data = await response.json();\n  return data;\n};\n\nconst fetchGroupMembers = async (groupID) => {\n  const url = `${BASE_URL}journal/groups/${groupID}/`;\n  const response = await fetch(url);\n  const data = await response.json();\n  return data;\n};\n\nconst addGroupMember = (groupID, memberObject) => {\n  console.log(memberObject)\n  return fetch(`${BASE_URL}journal/groups/${groupID}/new`, {\n    headers: {\n      'Content-Type': 'application/json',\n    },\n    method: \"POST\",\n    body: JSON.stringify(memberObject)\n  });\n};\n\nconst editGroupMember = (groupID, memberObject) => {\n  console.log(memberObject)\n  return fetch(`${BASE_URL}journal/groups/${groupID}/${memberObject.id}/edit/`, {\n    headers: {\n      'Content-Type': 'application/json',\n    },\n    method: \"PUT\",\n    body: JSON.stringify(memberObject)\n  });\n};\n\nconst deleteGroupMember = (groupID, memberObject) => {\n  return fetch(`${BASE_URL}journal/groups/${groupID}/${memberObject.id}/delete/`, {\n    headers: {\n      'Content-Type': 'application/json',\n    },\n    method: \"POST\",\n    body: JSON.stringify(memberObject)\n  });\n};\n\nexport {\n  fetchGroupByID,\n  fetchGroups,\n  addGroup,\n  editGroup,\n  deleteGroup,\n  fetchGroupMemberByID,\n  fetchGroupMembers,\n  addGroupMember,\n  editGroupMember,\n  deleteGroupMember,\n};","/Users/augustus/Desktop/code/individual_project/frontend/src/pages/NewMemberPage.js",["150","151","152","153","154"],"import React, { Component, useState } from 'react';\nimport { addEntry } from '../api/EntryAPI';\nimport { Redirect } from 'react-router-dom';\nimport { Button, Form, FormGroup, Input, Label, Dropdown, DropdownToggle, DropdownMenu, DropdownItem } from 'reactstrap'\n\nfunction NewMemberPage() {\n  const [ redirect, setRedirect ] = React.useState(false);\n  const [firstName, setFirstName] = useState(null);\n  const [lastName, setLastName] = useState(null);\n  const [maidenName, setMaidenName] = useState(null);\n  const [relationship, setRelationship] = useState(null);\n\n\n  const handleFormSubmit = async (event) => {\n    event.preventDefault();\n\n    const entryObject = {\n      first_name: firstName,\n      last_name: lastName,\n      maiden_name: maidenName,\n      relationship_to_you: relationship, \n    }\n    console.log(entryObject)\n    try {\n      const response = await addEntry(entryObject);\n      if (response.status === 200) {\n        // redirect the user back to Home Page upon successful POST\n        setRedirect(true);\n      } else {\n        // const jsonData = await response.json();\n        // alert(jsonData.error.message);\n        console.log(\"else statement triggered, line 77\")\n      }\n    } catch (err) {\n      console.error('error occurred while adding entry (consoled on NewEntryPage1):', err);\n    }\n  };\n\n  // return redirect ? <Redirect to={`/archive/entry/${entry.id}`} /> : (\n  return redirect ? <Redirect to={`/`} /> : (\n\n    <div style={{ padding: '20px' }}>\n      <h3> Add an Member to {this.group_name} </h3>\n      <Form onSubmit={handleFormSubmit}>\n        <FormGroup>\n          <Label for=\"firstName\">Write your entry</Label>\n          <Input value={firstName} type=\"textarea\" name=\"firstName\" id=\"firstName\" onChange={e => setFirstName(e.target.value)}/>\n        </FormGroup>\n        <FormGroup>\n          <Label for=\"lastName\">Write your entry</Label>\n          <Input value={lastName} type=\"textarea\" name=\"lastName\" id=\"lastName\" onChange={e => setLastName(e.target.value)}/>\n        </FormGroup>\n        <FormGroup>\n          <Label for=\"maidenName\">Write your entry</Label>\n          <Input value={maidenName} type=\"textarea\" name=\"maidenName\" id=\"maidenName\" onChange={e => setMaidenName(e.target.value)}/>\n        </FormGroup>\n        <FormGroup>\n          <Label for=\"relationship\">Write your entry</Label>\n          <Input value={relationship} type=\"textarea\" name=\"relationship\" id=\"relationship\" onChange={e => setRelationship(e.target.value)}/>\n        </FormGroup>\n        <Button>Submit</Button>\n      </Form>\n    </div>\n  )};\n\nexport default NewMemberPage","/Users/augustus/Desktop/code/individual_project/frontend/src/pages/NewGroupPage.js",["155","156","157","158","159","160"],"/Users/augustus/Desktop/code/individual_project/frontend/src/api/PromptAPI.js",[],{"ruleId":"161","replacedBy":"162"},{"ruleId":"163","replacedBy":"164"},{"ruleId":"165","severity":1,"message":"166","line":3,"column":32,"nodeType":"167","messageId":"168","endLine":3,"endColumn":40},{"ruleId":"165","severity":1,"message":"169","line":13,"column":8,"nodeType":"167","messageId":"168","endLine":13,"endColumn":24},{"ruleId":"165","severity":1,"message":"170","line":14,"column":8,"nodeType":"167","messageId":"168","endLine":14,"endColumn":20},{"ruleId":"165","severity":1,"message":"171","line":15,"column":8,"nodeType":"167","messageId":"168","endLine":15,"endColumn":23},{"ruleId":"165","severity":1,"message":"172","line":16,"column":8,"nodeType":"167","messageId":"168","endLine":16,"endColumn":21},{"ruleId":"165","severity":1,"message":"173","line":17,"column":8,"nodeType":"167","messageId":"168","endLine":17,"endColumn":22},{"ruleId":"165","severity":1,"message":"174","line":18,"column":8,"nodeType":"167","messageId":"168","endLine":18,"endColumn":21},{"ruleId":"175","severity":1,"message":"176","line":21,"column":1,"nodeType":"177","messageId":"178","endLine":24,"endColumn":14},{"ruleId":"161","replacedBy":"179"},{"ruleId":"163","replacedBy":"180"},{"ruleId":"165","severity":1,"message":"181","line":4,"column":18,"nodeType":"167","messageId":"168","endLine":4,"endColumn":22},{"ruleId":"165","severity":1,"message":"182","line":2,"column":10,"nodeType":"167","messageId":"168","endLine":2,"endColumn":14},{"ruleId":"165","severity":1,"message":"183","line":4,"column":8,"nodeType":"167","messageId":"168","endLine":4,"endColumn":11},{"ruleId":"165","severity":1,"message":"184","line":5,"column":8,"nodeType":"167","messageId":"168","endLine":5,"endColumn":16},{"ruleId":"185","severity":1,"message":"186","line":35,"column":1,"nodeType":"187","endLine":35,"endColumn":52},{"ruleId":"165","severity":1,"message":"182","line":2,"column":9,"nodeType":"167","messageId":"168","endLine":2,"endColumn":13},{"ruleId":"165","severity":1,"message":"166","line":2,"column":15,"nodeType":"167","messageId":"168","endLine":2,"endColumn":23},{"ruleId":"165","severity":1,"message":"188","line":2,"column":23,"nodeType":"167","messageId":"168","endLine":2,"endColumn":36},{"ruleId":"165","severity":1,"message":"189","line":5,"column":10,"nodeType":"167","messageId":"168","endLine":5,"endColumn":18},{"ruleId":"165","severity":1,"message":"190","line":12,"column":10,"nodeType":"167","messageId":"168","endLine":12,"endColumn":26},{"ruleId":"165","severity":1,"message":"191","line":28,"column":11,"nodeType":"167","messageId":"168","endLine":28,"endColumn":22},{"ruleId":"192","severity":1,"message":"193","line":65,"column":11,"nodeType":"194","endLine":70,"endColumn":49},{"ruleId":"165","severity":1,"message":"195","line":1,"column":17,"nodeType":"167","messageId":"168","endLine":1,"endColumn":26},{"ruleId":"165","severity":1,"message":"196","line":4,"column":49,"nodeType":"167","messageId":"168","endLine":4,"endColumn":57},{"ruleId":"165","severity":1,"message":"197","line":4,"column":59,"nodeType":"167","messageId":"168","endLine":4,"endColumn":73},{"ruleId":"165","severity":1,"message":"198","line":4,"column":75,"nodeType":"167","messageId":"168","endLine":4,"endColumn":87},{"ruleId":"165","severity":1,"message":"199","line":4,"column":89,"nodeType":"167","messageId":"168","endLine":4,"endColumn":101},{"ruleId":"165","severity":1,"message":"200","line":5,"column":8,"nodeType":"167","messageId":"168","endLine":5,"endColumn":17},{"ruleId":"165","severity":1,"message":"201","line":46,"column":11,"nodeType":"167","messageId":"168","endLine":46,"endColumn":23},{"ruleId":"165","severity":1,"message":"202","line":56,"column":9,"nodeType":"167","messageId":"168","endLine":56,"endColumn":19},{"ruleId":"203","severity":1,"message":"204","line":19,"column":6,"nodeType":"205","endLine":19,"endColumn":8,"suggestions":"206"},{"ruleId":"192","severity":1,"message":"193","line":66,"column":11,"nodeType":"194","endLine":71,"endColumn":57},{"ruleId":"165","severity":1,"message":"195","line":1,"column":17,"nodeType":"167","messageId":"168","endLine":1,"endColumn":26},{"ruleId":"165","severity":1,"message":"196","line":4,"column":49,"nodeType":"167","messageId":"168","endLine":4,"endColumn":57},{"ruleId":"165","severity":1,"message":"197","line":4,"column":59,"nodeType":"167","messageId":"168","endLine":4,"endColumn":73},{"ruleId":"165","severity":1,"message":"198","line":4,"column":75,"nodeType":"167","messageId":"168","endLine":4,"endColumn":87},{"ruleId":"165","severity":1,"message":"199","line":4,"column":89,"nodeType":"167","messageId":"168","endLine":4,"endColumn":101},{"ruleId":"165","severity":1,"message":"207","line":13,"column":9,"nodeType":"167","messageId":"168","endLine":13,"endColumn":17},{"ruleId":"203","severity":1,"message":"208","line":27,"column":6,"nodeType":"205","endLine":27,"endColumn":8,"suggestions":"209"},{"ruleId":"165","severity":1,"message":"166","line":2,"column":9,"nodeType":"167","messageId":"168","endLine":2,"endColumn":17},{"ruleId":"165","severity":1,"message":"210","line":12,"column":3,"nodeType":"167","messageId":"168","endLine":12,"endColumn":23},{"ruleId":"165","severity":1,"message":"197","line":13,"column":3,"nodeType":"167","messageId":"168","endLine":13,"endColumn":17},{"ruleId":"165","severity":1,"message":"198","line":14,"column":3,"nodeType":"167","messageId":"168","endLine":14,"endColumn":15},{"ruleId":"165","severity":1,"message":"199","line":15,"column":3,"nodeType":"167","messageId":"168","endLine":15,"endColumn":15},{"ruleId":"165","severity":1,"message":"211","line":16,"column":3,"nodeType":"167","messageId":"168","endLine":16,"endColumn":13},{"ruleId":"165","severity":1,"message":"212","line":21,"column":10,"nodeType":"167","messageId":"168","endLine":21,"endColumn":17},{"ruleId":"165","severity":1,"message":"213","line":21,"column":19,"nodeType":"167","messageId":"168","endLine":21,"endColumn":27},{"ruleId":"165","severity":1,"message":"214","line":22,"column":10,"nodeType":"167","messageId":"168","endLine":22,"endColumn":18},{"ruleId":"165","severity":1,"message":"215","line":22,"column":20,"nodeType":"167","messageId":"168","endLine":22,"endColumn":31},{"ruleId":"165","severity":1,"message":"216","line":23,"column":10,"nodeType":"167","messageId":"168","endLine":23,"endColumn":20},{"ruleId":"165","severity":1,"message":"216","line":28,"column":11,"nodeType":"167","messageId":"168","endLine":28,"endColumn":21},{"ruleId":"161","replacedBy":"217"},{"ruleId":"163","replacedBy":"218"},{"ruleId":"165","severity":1,"message":"219","line":16,"column":7,"nodeType":"167","messageId":"168","endLine":16,"endColumn":19},{"ruleId":"165","severity":1,"message":"195","line":1,"column":17,"nodeType":"167","messageId":"168","endLine":1,"endColumn":26},{"ruleId":"165","severity":1,"message":"196","line":4,"column":49,"nodeType":"167","messageId":"168","endLine":4,"endColumn":57},{"ruleId":"165","severity":1,"message":"197","line":4,"column":59,"nodeType":"167","messageId":"168","endLine":4,"endColumn":73},{"ruleId":"165","severity":1,"message":"198","line":4,"column":75,"nodeType":"167","messageId":"168","endLine":4,"endColumn":87},{"ruleId":"165","severity":1,"message":"199","line":4,"column":89,"nodeType":"167","messageId":"168","endLine":4,"endColumn":101},{"ruleId":"165","severity":1,"message":"195","line":1,"column":17,"nodeType":"167","messageId":"168","endLine":1,"endColumn":26},{"ruleId":"165","severity":1,"message":"196","line":4,"column":49,"nodeType":"167","messageId":"168","endLine":4,"endColumn":57},{"ruleId":"165","severity":1,"message":"197","line":4,"column":59,"nodeType":"167","messageId":"168","endLine":4,"endColumn":73},{"ruleId":"165","severity":1,"message":"198","line":4,"column":75,"nodeType":"167","messageId":"168","endLine":4,"endColumn":87},{"ruleId":"165","severity":1,"message":"199","line":4,"column":89,"nodeType":"167","messageId":"168","endLine":4,"endColumn":101},{"ruleId":"165","severity":1,"message":"220","line":10,"column":9,"nodeType":"167","messageId":"168","endLine":10,"endColumn":25},"no-native-reassign",["221"],"no-negated-in-lhs",["222"],"no-unused-vars","'Redirect' is defined but never used.","Identifier","unusedVar","'MemberDetailPage' is defined but never used.","'NewGroupPage' is defined but never used.","'GroupDetailPage' is defined but never used.","'EditGroupPage' is defined but never used.","'EditMemberPage' is defined but never used.","'NewMemberPage' is defined but never used.","no-lone-blocks","Block is redundant.","BlockStatement","redundantBlock",["221"],["222"],"'Form' is defined but never used.","'Link' is defined but never used.","'App' is defined but never used.","'EntryAPI' is defined but never used.","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","'searchEntries' is defined but never used.","'addGroup' is defined but never used.","'entriesDisplayed' is assigned a value but never used.","'entriesJson' is defined but never used.","jsx-a11y/iframe-has-title","<iframe> elements must have a unique title property.","JSXOpeningElement","'Component' is defined but never used.","'Dropdown' is defined but never used.","'DropdownToggle' is defined but never used.","'DropdownMenu' is defined but never used.","'DropdownItem' is defined but never used.","'getPrompt' is defined but never used.","'base64String' is assigned a value but never used.","'playRecord' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array.","ArrayExpression",["223"],"'recorder' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'props.match.params.id'. Either include it or remove the dependency array.",["224"],"'UncontrolledDropdown' is defined but never used.","'NavbarText' is defined but never used.","'isToken' is assigned a value but never used.","'setToken' is assigned a value but never used.","'redirect' is assigned a value but never used.","'setRedirect' is assigned a value but never used.","'isLoggedIn' is assigned a value but never used.",["221"],["222"],"'searchGroups' is assigned a value but never used.","'handleFormSubmit' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"225","fix":"226"},{"desc":"227","fix":"228"},"Update the dependencies array to be: [props]",{"range":"229","text":"230"},"Update the dependencies array to be: [props.match.params.id]",{"range":"231","text":"232"},[597,599],"[props]",[1049,1051],"[props.match.params.id]"]